/*! For license information please see bundle.app.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["cg-toast"]=t():e["cg-toast"]=t()}(self,(()=>{return e={408:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),u=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,b={};function h(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}function v(){}function g(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||y}h.prototype.isReactComponent={},h.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},h.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},v.prototype=h.prototype;var _=g.prototype=new v;_.constructor=g,m(_,h.prototype),_.isPureReactComponent=!0;var O=Array.isArray,x=Object.prototype.hasOwnProperty,T={current:null},S={key:!0,ref:!0,__self:!0,__source:!0};function j(e,t,r){var o,a={},i=null,s=null;if(null!=t)for(o in void 0!==t.ref&&(s=t.ref),void 0!==t.key&&(i=""+t.key),t)x.call(t,o)&&!S.hasOwnProperty(o)&&(a[o]=t[o]);var u=arguments.length-2;if(1===u)a.children=r;else if(1<u){for(var c=Array(u),l=0;l<u;l++)c[l]=arguments[l+2];a.children=c}if(e&&e.defaultProps)for(o in u=e.defaultProps)void 0===a[o]&&(a[o]=u[o]);return{$$typeof:n,type:e,key:i,ref:s,props:a,_owner:T.current}}function w(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var P=/\/+/g;function E(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function A(e,t,o,a,i){var s=typeof e;"undefined"!==s&&"boolean"!==s||(e=null);var u=!1;if(null===e)u=!0;else switch(s){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case n:case r:u=!0}}if(u)return i=i(u=e),e=""===a?"."+E(u,0):a,O(i)?(o="",null!=e&&(o=e.replace(P,"$&/")+"/"),A(i,t,o,"",(function(e){return e}))):null!=i&&(w(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,o+(!i.key||u&&u.key===i.key?"":(""+i.key).replace(P,"$&/")+"/")+e)),t.push(i)),1;if(u=0,a=""===a?".":a+":",O(e))for(var c=0;c<e.length;c++){var l=a+E(s=e[c],c);u+=A(s,t,o,l,i)}else if(l=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof l)for(e=l.call(e),c=0;!(s=e.next()).done;)u+=A(s=s.value,t,o,l=a+E(s,c++),i);else if("object"===s)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return u}function k(e,t,n){if(null==e)return e;var r=[],o=0;return A(e,r,"","",(function(e){return t.call(n,e,o++)})),r}function I(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var D={current:null},M={transition:null},R={ReactCurrentDispatcher:D,ReactCurrentBatchConfig:M,ReactCurrentOwner:T};t.Children={map:k,forEach:function(e,t,n){k(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return k(e,(function(){t++})),t},toArray:function(e){return k(e,(function(e){return e}))||[]},only:function(e){if(!w(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=h,t.Fragment=o,t.Profiler=i,t.PureComponent=g,t.StrictMode=a,t.Suspense=l,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var o=m({},e.props),a=e.key,i=e.ref,s=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,s=T.current),void 0!==t.key&&(a=""+t.key),e.type&&e.type.defaultProps)var u=e.type.defaultProps;for(c in t)x.call(t,c)&&!S.hasOwnProperty(c)&&(o[c]=void 0===t[c]&&void 0!==u?u[c]:t[c])}var c=arguments.length-2;if(1===c)o.children=r;else if(1<c){u=Array(c);for(var l=0;l<c;l++)u[l]=arguments[l+2];o.children=u}return{$$typeof:n,type:e.type,key:a,ref:i,props:o,_owner:s}},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},t.createElement=j,t.createFactory=function(e){var t=j.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=w,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:I}},t.memo=function(e,t){return{$$typeof:f,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=M.transition;M.transition={};try{e()}finally{M.transition=t}},t.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},t.useCallback=function(e,t){return D.current.useCallback(e,t)},t.useContext=function(e){return D.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return D.current.useDeferredValue(e)},t.useEffect=function(e,t){return D.current.useEffect(e,t)},t.useId=function(){return D.current.useId()},t.useImperativeHandle=function(e,t,n){return D.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return D.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return D.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return D.current.useMemo(e,t)},t.useReducer=function(e,t,n){return D.current.useReducer(e,t,n)},t.useRef=function(e){return D.current.useRef(e)},t.useState=function(e){return D.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return D.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return D.current.useTransition()},t.version="18.2.0"},294:(e,t,n)=>{"use strict";e.exports=n(408)},796:function(e,t,n){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e};Object.defineProperty(t,"__esModule",{value:!0}),t.CheckmarkIcon=void 0;var o,a,i,s=n(925),u=(0,s.keyframes)(o||(o=r(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"]))),c=(0,s.keyframes)(a||(a=r(["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"],["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"])));t.CheckmarkIcon=(0,s.styled)("div")(i||(i=r(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: "," 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ",";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"],["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: "," 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ",";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"])),(function(e){return e.primary||"#61d345"}),u,c,(function(e){return e.secondary||"#fff"}))},967:function(e,t,n){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e};Object.defineProperty(t,"__esModule",{value:!0}),t.ErrorIcon=void 0;var o,a,i,s,u=n(925),c=(0,u.keyframes)(o||(o=r(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"]))),l=(0,u.keyframes)(a||(a=r(["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),f=(0,u.keyframes)(i||(i=r(["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"])));t.ErrorIcon=(0,u.styled)("div")(s||(s=r(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ",";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"],["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ",";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"])),(function(e){return e.primary||"#ff4b4b"}),c,l,(function(e){return e.secondary||"#fff"}),f)},418:function(e,t,n){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e};Object.defineProperty(t,"__esModule",{value:!0}),t.LoaderIcon=void 0;var o,a,i=n(925),s=(0,i.keyframes)(o||(o=r(["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"],["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"])));t.LoaderIcon=(0,i.styled)("div")(a||(a=r(["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ",";\n  border-right-color: ",";\n  animation: "," 1s linear infinite;\n"],["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ",";\n  border-right-color: ",";\n  animation: "," 1s linear infinite;\n"])),(function(e){return e.secondary||"#e0e0e0"}),(function(e){return e.primary||"#616161"}),s)},839:function(e,t,n){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},o=this&&this.__assign||function(){return o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},o.apply(this,arguments)},a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ToastBar=void 0;var u,c,l=s(n(294)),f=n(925),d=n(384),p=n(773),y=n(488),m=function(e){return"\n0% {transform: translate3d(0,".concat(-200*e,"%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n")},b=function(e){return"\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,".concat(-150*e,"%,-1px) scale(.6); opacity:0;}\n")},h=(0,f.styled)("div")(u||(u=r(["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"],["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"]))),v=(0,f.styled)("div")(c||(c=r(["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"],["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"])));t.ToastBar=l.memo((function(e){var t=e.toast,n=e.position,r=e.style,a=e.children,i=t.height?function(e,t){var n=e.includes("top")?1:-1,r=(0,y.prefersReducedMotion)()?["0%{opacity:0;} 100%{opacity:1;}","0%{opacity:1;} 100%{opacity:0;}"]:[m(n),b(n)],o=r[0],a=r[1];return{animation:t?"".concat((0,f.keyframes)(o)," 0.35s cubic-bezier(.21,1.02,.73,1) forwards"):"".concat((0,f.keyframes)(a)," 0.4s forwards cubic-bezier(.06,.71,.55,1)")}}(t.position||n||"top-center",t.visible):{opacity:0},s=l.createElement(p.ToastIcon,{toast:t}),u=l.createElement(v,o({},t.ariaProps),(0,d.resolveValue)(t.message,t));return l.createElement(h,{className:t.className,style:o(o(o({},i),r),t.style)},"function"==typeof a?a({icon:s,message:u}):l.createElement(l.Fragment,null,s,u))}))},773:function(e,t,n){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},o=this&&this.__assign||function(){return o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},o.apply(this,arguments)},a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.ToastIcon=t.AnimatedIconWrapper=void 0;var u,c,l,f,d=s(n(294)),p=n(925),y=n(967),m=n(418),b=n(796),h=(0,p.styled)("div")(u||(u=r(["\n  position: absolute;\n"],["\n  position: absolute;\n"]))),v=(0,p.styled)("div")(c||(c=r(["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"],["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"]))),g=(0,p.keyframes)(l||(l=r(["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"])));t.AnimatedIconWrapper=(0,p.styled)("div")(f||(f=r(["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: "," 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"],["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: "," 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"])),g),t.ToastIcon=function(e){var n=e.toast,r=n.icon,a=n.type,i=n.iconTheme;return void 0!==r?"string"==typeof r?d.createElement(t.AnimatedIconWrapper,null,r):r:"blank"===a?null:d.createElement(v,null,d.createElement(m.LoaderIcon,o({},i)),"loading"!==a&&d.createElement(h,null,"error"===a?d.createElement(y.ErrorIcon,o({},i)):d.createElement(b.CheckmarkIcon,o({},i))))}},354:function(e,t,n){"use strict";var r=this&&this.__makeTemplateObject||function(e,t){return Object.defineProperty?Object.defineProperty(e,"raw",{value:t}):e.raw=t,e},o=this&&this.__assign||function(){return o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},o.apply(this,arguments)},a=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&a(t,e,n);return i(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.Toaster=void 0;var u=n(925),c=s(n(294)),l=n(384),f=n(871),d=n(488),p=n(839);(0,u.setup)(c.createElement);var y,m=function(e){var t=e.id,n=e.className,r=e.style,o=e.onHeightUpdate,a=e.children,i=c.useCallback((function(e){if(e){var n=function(){var n=e.getBoundingClientRect().height;o(t,n)};n(),new MutationObserver(n).observe(e,{subtree:!0,childList:!0,characterData:!0})}}),[t,o]);return c.createElement("div",{ref:i,className:n,style:r},a)},b=(0,u.css)(y||(y=r(["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"],["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"])));t.Toaster=function(e){var t=e.reverseOrder,n=e.position,r=void 0===n?"top-center":n,a=e.toastOptions,i=e.gutter,s=e.children,u=e.containerStyle,y=e.containerClassName,h=(0,f.useToaster)(a),v=h.toasts,g=h.handlers;return c.createElement("div",{style:o({position:"fixed",zIndex:9999,top:16,left:16,right:16,bottom:16,pointerEvents:"none"},u),className:y,onMouseEnter:g.startPause,onMouseLeave:g.endPause},v.map((function(e){var n=e.position||r,a=function(e,t){var n=e.includes("top"),r=n?{top:0}:{bottom:0},a=e.includes("center")?{justifyContent:"center"}:e.includes("right")?{justifyContent:"flex-end"}:{};return o(o({left:0,right:0,display:"flex",position:"absolute",transition:(0,d.prefersReducedMotion)()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:"translateY(".concat(t*(n?1:-1),"px)")},r),a)}(n,g.calculateOffset(e,{reverseOrder:t,gutter:i,defaultPosition:r}));return c.createElement(m,{id:e.id,key:e.id,onHeightUpdate:g.updateHeight,className:e.visible?b:"",style:a},"custom"===e.type?(0,l.resolveValue)(e.message,e):s?s(e):c.createElement(p.ToastBar,{toast:e,position:n}))})))}},589:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)},o=this&&this.__spreadArray||function(e,t,n){if(n||2===arguments.length)for(var r,o=0,a=t.length;o<a;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return e.concat(r||Array.prototype.slice.call(t))};Object.defineProperty(t,"__esModule",{value:!0}),t.useStore=t.defaultTimeouts=t.dispatch=t.reducer=t.TOAST_EXPIRE_DISMISS_DELAY=t.ActionType=void 0;var a,i=n(294);!function(e){e[e.ADD_TOAST=0]="ADD_TOAST",e[e.UPDATE_TOAST=1]="UPDATE_TOAST",e[e.UPSERT_TOAST=2]="UPSERT_TOAST",e[e.DISMISS_TOAST=3]="DISMISS_TOAST",e[e.REMOVE_TOAST=4]="REMOVE_TOAST",e[e.START_PAUSE=5]="START_PAUSE",e[e.END_PAUSE=6]="END_PAUSE"}(a=t.ActionType||(t.ActionType={}));var s=new Map;t.TOAST_EXPIRE_DISMISS_DELAY=1e3;var u=function(e){if(!s.has(e)){var n=setTimeout((function(){s.delete(e),(0,t.dispatch)({type:a.REMOVE_TOAST,toastId:e})}),t.TOAST_EXPIRE_DISMISS_DELAY);s.set(e,n)}};t.reducer=function(e,n){switch(n.type){case a.ADD_TOAST:return r(r({},e),{toasts:o([n.toast],e.toasts,!0).slice(0,20)});case a.UPDATE_TOAST:return n.toast.id&&(f=n.toast.id,(d=s.get(f))&&clearTimeout(d)),r(r({},e),{toasts:e.toasts.map((function(e){return e.id===n.toast.id?r(r({},e),n.toast):e}))});case a.UPSERT_TOAST:var i=n.toast;return e.toasts.find((function(e){return e.id===i.id}))?(0,t.reducer)(e,{type:a.UPDATE_TOAST,toast:i}):(0,t.reducer)(e,{type:a.ADD_TOAST,toast:i});case a.DISMISS_TOAST:var c=n.toastId;return c?u(c):e.toasts.forEach((function(e){u(e.id)})),r(r({},e),{toasts:e.toasts.map((function(e){return e.id===c||void 0===c?r(r({},e),{visible:!1}):e}))});case a.REMOVE_TOAST:return void 0===n.toastId?r(r({},e),{toasts:[]}):r(r({},e),{toasts:e.toasts.filter((function(e){return e.id!==n.toastId}))});case a.START_PAUSE:return r(r({},e),{pausedAt:n.time});case a.END_PAUSE:var l=n.time-(e.pausedAt||0);return r(r({},e),{pausedAt:void 0,toasts:e.toasts.map((function(e){return r(r({},e),{pauseDuration:e.pauseDuration+l})}))})}var f,d};var c=[],l={toasts:[],pausedAt:void 0};t.dispatch=function(e){l=(0,t.reducer)(l,e),c.forEach((function(e){e(l)}))},t.defaultTimeouts={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},t.useStore=function(e){void 0===e&&(e={});var n=(0,i.useState)(l),o=n[0],a=n[1];(0,i.useEffect)((function(){return c.push(a),function(){var e=c.indexOf(a);e>-1&&c.splice(e,1)}}),[o]);var s=o.toasts.map((function(n){var o,a;return r(r(r(r({},e),e[n.type]),n),{duration:n.duration||(null===(o=e[n.type])||void 0===o?void 0:o.duration)||(null==e?void 0:e.duration)||t.defaultTimeouts[n.type],style:r(r(r({},e.style),null===(a=e[n.type])||void 0===a?void 0:a.style),n.style)})}));return r(r({},o),{toasts:s})}},946:function(e,t,n){"use strict";var r=this&&this.__assign||function(){return r=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},r.apply(this,arguments)};Object.defineProperty(t,"__esModule",{value:!0}),t.toast=void 0;var o=n(384),a=n(488),i=n(589),s=function(e){return function(t,n){var o=function(e,t,n){return void 0===t&&(t="blank"),r(r({createdAt:Date.now(),visible:!0,type:t,ariaProps:{role:"status","aria-live":"polite"},message:e,pauseDuration:0},n),{id:(null==n?void 0:n.id)||(0,a.genId)()})}(t,e,n);return(0,i.dispatch)({type:i.ActionType.UPSERT_TOAST,toast:o}),o.id}},u=function(e,t){return s("blank")(e,t)};t.toast=u,u.error=s("error"),u.success=s("success"),u.loading=s("loading"),u.custom=s("custom"),u.dismiss=function(e){(0,i.dispatch)({type:i.ActionType.DISMISS_TOAST,toastId:e})},u.remove=function(e){return(0,i.dispatch)({type:i.ActionType.REMOVE_TOAST,toastId:e})},u.promise=function(e,t,n){var a=u.loading(t.loading,r(r({},n),null==n?void 0:n.loading));return e.then((function(e){return u.success((0,o.resolveValue)(t.success,e),r(r({id:a},n),null==n?void 0:n.success)),e})).catch((function(e){u.error((0,o.resolveValue)(t.error,e),r(r({id:a},n),null==n?void 0:n.error))})),e}},384:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resolveValue=void 0,t.resolveValue=function(e,t){return function(e){return"function"==typeof e}(e)?e(t):e}},871:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useToaster=void 0;var r=n(294),o=n(589),a=n(946),i=function(e,t){(0,o.dispatch)({type:o.ActionType.UPDATE_TOAST,toast:{id:e,height:t}})},s=function(){(0,o.dispatch)({type:o.ActionType.START_PAUSE,time:Date.now()})};t.useToaster=function(e){var t=(0,o.useStore)(e),n=t.toasts,u=t.pausedAt;(0,r.useEffect)((function(){if(!u){var e=Date.now(),t=n.map((function(t){if(t.duration!==1/0){var n=(t.duration||0)+t.pauseDuration-(e-t.createdAt);if(!(n<0))return setTimeout((function(){return a.toast.dismiss(t.id)}),n);t.visible&&a.toast.dismiss(t.id)}}));return function(){t.forEach((function(e){return e&&clearTimeout(e)}))}}}),[n,u]);var c=(0,r.useCallback)((function(){u&&(0,o.dispatch)({type:o.ActionType.END_PAUSE,time:Date.now()})}),[u]),l=(0,r.useCallback)((function(e,t){var r,o=t||{},a=o.reverseOrder,i=void 0!==a&&a,s=o.gutter,u=void 0===s?8:s,c=o.defaultPosition,l=n.filter((function(t){return(t.position||c)===(e.position||c)&&t.height})),f=l.findIndex((function(t){return t.id===e.id})),d=l.filter((function(e,t){return t<f&&e.visible})).length;return(r=l.filter((function(e){return e.visible}))).slice.apply(r,i?[d+1]:[0,d]).reduce((function(e,t){return e+(t.height||0)+u}),0)}),[n]);return{toasts:n,handlers:{updateHeight:i,startPause:s,endPause:c,calculateOffset:l}}}},488:(e,t)=>{"use strict";var n,r;Object.defineProperty(t,"__esModule",{value:!0}),t.prefersReducedMotion=t.genId=void 0,t.genId=(n=0,function(){return(++n).toString()}),t.prefersReducedMotion=(r=void 0,function(){if(void 0===r&&"undefined"!=typeof window){var e=matchMedia("(prefers-reduced-motion: reduce)");r=!e||e.matches}return r})},817:(e,t,n)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.toast=t.useToasterStore=t.useToaster=t.resolveValue=void 0;var r=n(946);Object.defineProperty(t,"toast",{enumerable:!0,get:function(){return r.toast}});var o=n(384);Object.defineProperty(t,"resolveValue",{enumerable:!0,get:function(){return o.resolveValue}});var a=n(871);Object.defineProperty(t,"useToaster",{enumerable:!0,get:function(){return a.useToaster}});var i=n(589);Object.defineProperty(t,"useToasterStore",{enumerable:!0,get:function(){return i.useStore}}),t.default=r.toast},607:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,r,o)}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.toast=t.LoaderIcon=t.ErrorIcon=t.CheckmarkIcon=t.Toaster=t.ToastIcon=t.ToastBar=void 0;var a=n(946);Object.defineProperty(t,"toast",{enumerable:!0,get:function(){return a.toast}}),o(n(817),t);var i=n(839);Object.defineProperty(t,"ToastBar",{enumerable:!0,get:function(){return i.ToastBar}});var s=n(773);Object.defineProperty(t,"ToastIcon",{enumerable:!0,get:function(){return s.ToastIcon}});var u=n(354);Object.defineProperty(t,"Toaster",{enumerable:!0,get:function(){return u.Toaster}});var c=n(796);Object.defineProperty(t,"CheckmarkIcon",{enumerable:!0,get:function(){return c.CheckmarkIcon}});var l=n(967);Object.defineProperty(t,"ErrorIcon",{enumerable:!0,get:function(){return l.ErrorIcon}});var f=n(418);Object.defineProperty(t,"LoaderIcon",{enumerable:!0,get:function(){return f.LoaderIcon}}),t.default=a.toast},925:(e,t)=>{let n={data:""},r=e=>"object"==typeof window?((e?e.querySelector("#_goober"):window._goober)||Object.assign((e||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:e||n,o=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,a=/\/\*[^]*?\*\/|  +/g,i=/\n+/g,s=(e,t)=>{let n="",r="",o="";for(let a in e){let i=e[a];"@"==a[0]?"i"==a[1]?n=a+" "+i+";":r+="f"==a[1]?s(i,a):a+"{"+s(i,"k"==a[1]?"":t)+"}":"object"==typeof i?r+=s(i,t?t.replace(/([^,])+/g,(e=>a.replace(/(^:.*)|([^,])+/g,(t=>/&/.test(t)?t.replace(/&/g,e):e?e+" "+t:t)))):a):null!=i&&(a=/^--/.test(a)?a:a.replace(/[A-Z]/g,"-$&").toLowerCase(),o+=s.p?s.p(a,i):a+":"+i+";")}return n+(t&&o?t+"{"+o+"}":o)+r},u={},c=e=>{if("object"==typeof e){let t="";for(let n in e)t+=n+c(e[n]);return t}return e},l=(e,t,n,r,l)=>{let f=c(e),d=u[f]||(u[f]=(e=>{let t=0,n=11;for(;t<e.length;)n=101*n+e.charCodeAt(t++)>>>0;return"go"+n})(f));if(!u[d]){let t=f!==e?e:(e=>{let t,n,r=[{}];for(;t=o.exec(e.replace(a,""));)t[4]?r.shift():t[3]?(n=t[3].replace(i," ").trim(),r.unshift(r[0][n]=r[0][n]||{})):r[0][t[1]]=t[2].replace(i," ").trim();return r[0]})(e);u[d]=s(l?{["@keyframes "+d]:t}:t,n?"":"."+d)}let p=n&&u.g?u.g:null;return n&&(u.g=u[d]),((e,t,n,r)=>{r?t.data=t.data.replace(r,e):-1===t.data.indexOf(e)&&(t.data=n?e+t.data:t.data+e)})(u[d],t,r,p),d},f=(e,t,n)=>e.reduce(((e,r,o)=>{let a=t[o];if(a&&a.call){let e=a(n),t=e&&e.props&&e.props.className||/^go/.test(e)&&e;a=t?"."+t:e&&"object"==typeof e?e.props?"":s(e,""):!1===e?"":e}return e+r+(null==a?"":a)}),"");function d(e){let t=this||{},n=e.call?e(t.p):e;return l(n.unshift?n.raw?f(n,[].slice.call(arguments,1),t.p):n.reduce(((e,n)=>Object.assign(e,n&&n.call?n(t.p):n)),{}):n,r(t.target),t.g,t.o,t.k)}let p,y,m,b=d.bind({g:1}),h=d.bind({k:1});t.css=d,t.extractCss=e=>{let t=r(e),n=t.data;return t.data="",n},t.glob=b,t.keyframes=h,t.setup=function(e,t,n,r){s.p=t,p=e,y=n,m=r},t.styled=function(e,t){let n=this||{};return function(){let r=arguments;function o(a,i){let s=Object.assign({},a),u=s.className||o.className;n.p=Object.assign({theme:y&&y()},s),n.o=/ *go\d+/.test(u),s.className=d.apply(n,r)+(u?" "+u:""),t&&(s.ref=i);let c=e;return e[0]&&(c=s.as||e,delete s.as),m&&c[0]&&m(s),p(c,s)}return t?t(o):o}}}},t={},function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}(607);var e,t}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,