!function(n,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react")):"function"==typeof define&&define.amd?define(["react"],t):"object"==typeof exports?exports["cg-toast"]=t(require("react")):n["cg-toast"]=t(n.react)}(self,(n=>(()=>{"use strict";var t={156:t=>{t.exports=n}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var a=e[n]={exports:{}};return t[n](a,a.exports,r),a.exports}r.d=(n,t)=>{for(var e in t)r.o(t,e)&&!r.o(n,e)&&Object.defineProperty(n,e,{enumerable:!0,get:t[e]})},r.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),r.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var o={};return(()=>{r.r(o),r.d(o,{CheckmarkIcon:()=>mn,ErrorIcon:()=>sn,LoaderIcon:()=>ln,ToastBar:()=>jn,ToastIcon:()=>wn,Toaster:()=>Mn,default:()=>zn,resolveValue:()=>a,toast:()=>w,useToaster:()=>S,useToasterStore:()=>h});var n,t,e,a=function(n,t){return function(n){return"function"==typeof n}(n)?n(t):n},i=(n=0,function(){return(++n).toString()}),s=(t=void 0,function(){if(void 0===t&&"undefined"!=typeof window){var n=matchMedia("(prefers-reduced-motion: reduce)");t=!n||n.matches}return t}),c=r(156),u=function(){return u=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var o in t=arguments[e])Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o]);return n},u.apply(this,arguments)},l=function(n,t,e){if(e||2===arguments.length)for(var r,o=0,a=t.length;o<a;o++)!r&&o in t||(r||(r=Array.prototype.slice.call(t,0,o)),r[o]=t[o]);return n.concat(r||Array.prototype.slice.call(t))};!function(n){n[n.ADD_TOAST=0]="ADD_TOAST",n[n.UPDATE_TOAST=1]="UPDATE_TOAST",n[n.UPSERT_TOAST=2]="UPSERT_TOAST",n[n.DISMISS_TOAST=3]="DISMISS_TOAST",n[n.REMOVE_TOAST=4]="REMOVE_TOAST",n[n.START_PAUSE=5]="START_PAUSE",n[n.END_PAUSE=6]="END_PAUSE"}(e||(e={}));var d=new Map,p=function(n){if(!d.has(n)){var t=setTimeout((function(){d.delete(n),b({type:e.REMOVE_TOAST,toastId:n})}),1e3);d.set(n,t)}},f=function(n,t){switch(t.type){case e.ADD_TOAST:return u(u({},n),{toasts:l([t.toast],n.toasts,!0).slice(0,20)});case e.UPDATE_TOAST:return t.toast.id&&(i=t.toast.id,(s=d.get(i))&&clearTimeout(s)),u(u({},n),{toasts:n.toasts.map((function(n){return n.id===t.toast.id?u(u({},n),t.toast):n}))});case e.UPSERT_TOAST:var r=t.toast;return n.toasts.find((function(n){return n.id===r.id}))?f(n,{type:e.UPDATE_TOAST,toast:r}):f(n,{type:e.ADD_TOAST,toast:r});case e.DISMISS_TOAST:var o=t.toastId;return o?p(o):n.toasts.forEach((function(n){p(n.id)})),u(u({},n),{toasts:n.toasts.map((function(n){return n.id===o||void 0===o?u(u({},n),{visible:!1}):n}))});case e.REMOVE_TOAST:return void 0===t.toastId?u(u({},n),{toasts:[]}):u(u({},n),{toasts:n.toasts.filter((function(n){return n.id!==t.toastId}))});case e.START_PAUSE:return u(u({},n),{pausedAt:t.time});case e.END_PAUSE:var a=t.time-(n.pausedAt||0);return u(u({},n),{pausedAt:void 0,toasts:n.toasts.map((function(n){return u(u({},n),{pauseDuration:n.pauseDuration+a})}))})}var i,s},m=[],y={toasts:[],pausedAt:void 0},b=function(n){y=f(y,n),m.forEach((function(n){n(y)}))},g={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},h=function(n){void 0===n&&(n={});var t=c.useState(y),e=t[0],r=t[1];c.useEffect((function(){return m.push(r),function(){var n=m.indexOf(r);n>-1&&m.splice(n,1)}}),[e]);var o=e.toasts.map((function(t){var e,r;return u(u(u(u({},n),n[t.type]),t),{duration:t.duration||(null===(e=n[t.type])||void 0===e?void 0:e.duration)||(null==n?void 0:n.duration)||g[t.type],style:u(u(u({},n.style),null===(r=n[t.type])||void 0===r?void 0:r.style),t.style)})}));return u(u({},e),{toasts:o})},v=function(){return v=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var o in t=arguments[e])Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o]);return n},v.apply(this,arguments)},x=function(n){return function(t,r){var o=function(n,t,e){return void 0===t&&(t="blank"),v(v({createdAt:Date.now(),visible:!0,type:t,ariaProps:{role:"status","aria-live":"polite"},message:n,pauseDuration:0},e),{id:(null==e?void 0:e.id)||i()})}(t,n,r);return b({type:e.UPSERT_TOAST,toast:o}),o.id}},w=function(n,t){return x("blank")(n,t)};w.error=x("error"),w.success=x("success"),w.loading=x("loading"),w.custom=x("custom"),w.dismiss=function(n){b({type:e.DISMISS_TOAST,toastId:n})},w.remove=function(n){return b({type:e.REMOVE_TOAST,toastId:n})},w.promise=function(n,t,e){var r=w.loading(t.loading,v(v({},e),null==e?void 0:e.loading));return n.then((function(n){return w.success(a(t.success,n),v(v({id:r},e),null==e?void 0:e.success)),n})).catch((function(n){w.error(a(t.error,n),v(v({id:r},e),null==e?void 0:e.error))})),n};var T=function(n,t){b({type:e.UPDATE_TOAST,toast:{id:n,height:t}})},O=function(){b({type:e.START_PAUSE,time:Date.now()})},S=function(n){var t=h(n),r=t.toasts,o=t.pausedAt;(0,c.useEffect)((function(){if(!o){var n=Date.now(),t=r.map((function(t){if(t.duration!==1/0){var e=(t.duration||0)+t.pauseDuration-(n-t.createdAt);if(!(e<0))return setTimeout((function(){return w.dismiss(t.id)}),e);t.visible&&w.dismiss(t.id)}}));return function(){t.forEach((function(n){return n&&clearTimeout(n)}))}}}),[r,o]);var a=(0,c.useCallback)((function(){o&&b({type:e.END_PAUSE,time:Date.now()})}),[o]),i=(0,c.useCallback)((function(n,t){var e,o=t||{},a=o.reverseOrder,i=void 0!==a&&a,s=o.gutter,c=void 0===s?8:s,u=o.defaultPosition,l=r.filter((function(t){return(t.position||u)===(n.position||u)&&t.height})),d=l.findIndex((function(t){return t.id===n.id})),p=l.filter((function(n,t){return t<d&&n.visible})).length,f=(e=l.filter((function(n){return n.visible}))).slice.apply(e,i?[p+1]:[0,p]).reduce((function(n,t){return n+(t.height||0)+c}),0);return f}),[r]);return{toasts:r,handlers:{updateHeight:T,startPause:O,endPause:a,calculateOffset:i}}};let E={data:""},A=n=>"object"==typeof window?((n?n.querySelector("#_goober"):window._goober)||Object.assign((n||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:n||E,P=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,j=/\/\*[^]*?\*\/|  +/g,_=/\n+/g,D=(n,t)=>{let e="",r="",o="";for(let a in n){let i=n[a];"@"==a[0]?"i"==a[1]?e=a+" "+i+";":r+="f"==a[1]?D(i,a):a+"{"+D(i,"k"==a[1]?"":t)+"}":"object"==typeof i?r+=D(i,t?t.replace(/([^,])+/g,(n=>a.replace(/(^:.*)|([^,])+/g,(t=>/&/.test(t)?t.replace(/&/g,n):n?n+" "+t:t)))):a):null!=i&&(a=/^--/.test(a)?a:a.replace(/[A-Z]/g,"-$&").toLowerCase(),o+=D.p?D.p(a,i):a+":"+i+";")}return e+(t&&o?t+"{"+o+"}":o)+r},k={},I=n=>{if("object"==typeof n){let t="";for(let e in n)t+=e+I(n[e]);return t}return n},U=(n,t,e,r,o)=>{let a=I(n),i=k[a]||(k[a]=(n=>{let t=0,e=11;for(;t<n.length;)e=101*e+n.charCodeAt(t++)>>>0;return"go"+e})(a));if(!k[i]){let t=a!==n?n:(n=>{let t,e,r=[{}];for(;t=P.exec(n.replace(j,""));)t[4]?r.shift():t[3]?(e=t[3].replace(_," ").trim(),r.unshift(r[0][e]=r[0][e]||{})):r[0][t[1]]=t[2].replace(_," ").trim();return r[0]})(n);k[i]=D(o?{["@keyframes "+i]:t}:t,e?"":"."+i)}let s=e&&k.g?k.g:null;return e&&(k.g=k[i]),((n,t,e,r)=>{r?t.data=t.data.replace(r,n):-1===t.data.indexOf(n)&&(t.data=e?n+t.data:t.data+n)})(k[i],t,r,s),i},M=(n,t,e)=>n.reduce(((n,r,o)=>{let a=t[o];if(a&&a.call){let n=a(e),t=n&&n.props&&n.props.className||/^go/.test(n)&&n;a=t?"."+t:n&&"object"==typeof n?n.props?"":D(n,""):!1===n?"":n}return n+r+(null==a?"":a)}),"");function z(n){let t=this||{},e=n.call?n(t.p):n;return U(e.unshift?e.raw?M(e,[].slice.call(arguments,1),t.p):e.reduce(((n,e)=>Object.assign(n,e&&e.call?e(t.p):e)),{}):e,A(t.target),t.g,t.o,t.k)}z.bind({g:1});let N,R,C,V=z.bind({k:1});function F(n,t){let e=this||{};return function(){let r=arguments;function o(a,i){let s=Object.assign({},a),c=s.className||o.className;e.p=Object.assign({theme:R&&R()},s),e.o=/ *go\d+/.test(c),s.className=z.apply(e,r)+(c?" "+c:""),t&&(s.ref=i);let u=n;return n[0]&&(u=s.as||n,delete s.as),C&&u[0]&&C(s),N(u,s)}return t?t(o):o}}var H,L,q,B,Y,Z,$,G,J,K,Q,W,X,nn,tn,en=function(n,t){return Object.defineProperty?Object.defineProperty(n,"raw",{value:t}):n.raw=t,n},rn=V(H||(H=en(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"]))),on=V(L||(L=en(["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),an=V(q||(q=en(["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"]))),sn=F("div")(B||(B=en(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ",";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"],["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ",";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"])),(function(n){return n.primary||"#ff4b4b"}),rn,on,(function(n){return n.secondary||"#fff"}),an),cn=function(n,t){return Object.defineProperty?Object.defineProperty(n,"raw",{value:t}):n.raw=t,n},un=V(Y||(Y=cn(["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"],["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"]))),ln=F("div")(Z||(Z=cn(["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ",";\n  border-right-color: ",";\n  animation: "," 1s linear infinite;\n"],["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ",";\n  border-right-color: ",";\n  animation: "," 1s linear infinite;\n"])),(function(n){return n.secondary||"#e0e0e0"}),(function(n){return n.primary||"#616161"}),un),dn=function(n,t){return Object.defineProperty?Object.defineProperty(n,"raw",{value:t}):n.raw=t,n},pn=V($||($=dn(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"]))),fn=V(G||(G=dn(["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"],["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"]))),mn=F("div")(J||(J=dn(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: "," 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ",";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"],["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: "," 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ",";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"])),(function(n){return n.primary||"#61d345"}),pn,fn,(function(n){return n.secondary||"#fff"})),yn=function(n,t){return Object.defineProperty?Object.defineProperty(n,"raw",{value:t}):n.raw=t,n},bn=function(){return bn=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var o in t=arguments[e])Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o]);return n},bn.apply(this,arguments)},gn=F("div")(K||(K=yn(["\n  position: absolute;\n"],["\n  position: absolute;\n"]))),hn=F("div")(Q||(Q=yn(["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"],["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"]))),vn=V(W||(W=yn(["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),xn=F("div")(X||(X=yn(["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: "," 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"],["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: "," 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"])),vn),wn=function(n){var t=n.toast,e=t.icon,r=t.type,o=t.iconTheme;return void 0!==e?"string"==typeof e?c.createElement(xn,null,e):e:"blank"===r?null:c.createElement(hn,null,c.createElement(ln,bn({},o)),"loading"!==r&&c.createElement(gn,null,"error"===r?c.createElement(sn,bn({},o)):c.createElement(mn,bn({},o))))},Tn=function(n,t){return Object.defineProperty?Object.defineProperty(n,"raw",{value:t}):n.raw=t,n},On=function(){return On=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var o in t=arguments[e])Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o]);return n},On.apply(this,arguments)},Sn=function(n){return"\n0% {transform: translate3d(0,".concat(-200*n,"%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n")},En=function(n){return"\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,".concat(-150*n,"%,-1px) scale(.6); opacity:0;}\n")},An=F("div")(nn||(nn=Tn(["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"],["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"]))),Pn=F("div")(tn||(tn=Tn(["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"],["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"]))),jn=c.memo((function(n){var t=n.toast,e=n.position,r=n.style,o=n.children,i=t.height?function(n,t){var e=n.includes("top")?1:-1,r=s()?["0%{opacity:0;} 100%{opacity:1;}","0%{opacity:1;} 100%{opacity:0;}"]:[Sn(e),En(e)],o=r[1];return{animation:t?"".concat(V(r[0])," 0.35s cubic-bezier(.21,1.02,.73,1) forwards"):"".concat(V(o)," 0.4s forwards cubic-bezier(.06,.71,.55,1)")}}(t.position||e||"top-center",t.visible):{opacity:0},u=c.createElement(wn,{toast:t}),l=c.createElement(Pn,On({},t.ariaProps),a(t.message,t));return c.createElement(An,{className:t.className,style:On(On(On({},i),r),t.style)},"function"==typeof o?o({icon:u,message:l}):c.createElement(c.Fragment,null,u,l))})),_n=function(n,t){return Object.defineProperty?Object.defineProperty(n,"raw",{value:t}):n.raw=t,n},Dn=function(){return Dn=Object.assign||function(n){for(var t,e=1,r=arguments.length;e<r;e++)for(var o in t=arguments[e])Object.prototype.hasOwnProperty.call(t,o)&&(n[o]=t[o]);return n},Dn.apply(this,arguments)};!function(n,t,e,r){D.p=t,N=n,R=e,C=r}(c.createElement);var kn,In=function(n){var t=n.id,e=n.className,r=n.style,o=n.onHeightUpdate,a=n.children,i=c.useCallback((function(n){if(n){var e=function(){var e=n.getBoundingClientRect().height;o(t,e)};e(),new MutationObserver(e).observe(n,{subtree:!0,childList:!0,characterData:!0})}}),[t,o]);return c.createElement("div",{ref:i,className:e,style:r},a)},Un=z(kn||(kn=_n(["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"],["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"]))),Mn=function(n){var t=n.reverseOrder,e=n.position,r=void 0===e?"top-center":e,o=n.toastOptions,i=n.gutter,u=n.children,l=n.containerStyle,d=n.containerClassName,p=S(o),f=p.toasts,m=p.handlers;return c.createElement("div",{style:Dn({position:"fixed",zIndex:9999,top:16,left:16,right:16,bottom:16,pointerEvents:"none"},l),className:d,onMouseEnter:m.startPause,onMouseLeave:m.endPause},f.map((function(n){var e=n.position||r,o=function(n,t){var e=n.includes("top"),r=e?{top:0}:{bottom:0},o=n.includes("center")?{justifyContent:"center"}:n.includes("right")?{justifyContent:"flex-end"}:{};return Dn(Dn({left:0,right:0,display:"flex",position:"absolute",transition:s()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:"translateY(".concat(t*(e?1:-1),"px)")},r),o)}(e,m.calculateOffset(n,{reverseOrder:t,gutter:i,defaultPosition:r}));return c.createElement(In,{id:n.id,key:n.id,onHeightUpdate:m.updateHeight,className:n.visible?Un:"",style:o},"custom"===n.type?a(n.message,n):u?u(n):c.createElement(jn,{toast:n,position:e}))})))};const zn=w})(),o})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,