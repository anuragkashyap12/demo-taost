/*! For license information please see bundle.app.js.LICENSE.txt */
!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports["cg-toast"]=n():t["cg-toast"]=n()}(self,(()=>(()=>{"use strict";var t={408:(t,n)=>{var e=Symbol.for("react.element"),r=Symbol.for("react.portal"),o=Symbol.for("react.fragment"),a=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),s=Symbol.for("react.provider"),c=Symbol.for("react.context"),u=Symbol.for("react.forward_ref"),l=Symbol.for("react.suspense"),f=Symbol.for("react.memo"),p=Symbol.for("react.lazy"),d=Symbol.iterator;var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,b={};function h(t,n,e){this.props=t,this.context=n,this.refs=b,this.updater=e||y}function g(){}function v(t,n,e){this.props=t,this.context=n,this.refs=b,this.updater=e||y}h.prototype.isReactComponent={},h.prototype.setState=function(t,n){if("object"!=typeof t&&"function"!=typeof t&&null!=t)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,t,n,"setState")},h.prototype.forceUpdate=function(t){this.updater.enqueueForceUpdate(this,t,"forceUpdate")},g.prototype=h.prototype;var x=v.prototype=new g;x.constructor=v,m(x,h.prototype),x.isPureReactComponent=!0;var w=Array.isArray,S=Object.prototype.hasOwnProperty,O={current:null},T={key:!0,ref:!0,__self:!0,__source:!0};function E(t,n,r){var o,a={},i=null,s=null;if(null!=n)for(o in void 0!==n.ref&&(s=n.ref),void 0!==n.key&&(i=""+n.key),n)S.call(n,o)&&!T.hasOwnProperty(o)&&(a[o]=n[o]);var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){for(var u=Array(c),l=0;l<c;l++)u[l]=arguments[l+2];a.children=u}if(t&&t.defaultProps)for(o in c=t.defaultProps)void 0===a[o]&&(a[o]=c[o]);return{$$typeof:e,type:t,key:i,ref:s,props:a,_owner:O.current}}function _(t){return"object"==typeof t&&null!==t&&t.$$typeof===e}var j=/\/+/g;function A(t,n){return"object"==typeof t&&null!==t&&null!=t.key?function(t){var n={"=":"=0",":":"=2"};return"$"+t.replace(/[=:]/g,(function(t){return n[t]}))}(""+t.key):n.toString(36)}function P(t,n,o,a,i){var s=typeof t;"undefined"!==s&&"boolean"!==s||null;var c=!1;if(null===t)!0;else switch(s){case"string":case"number":!0;break;case"object":switch(t.$$typeof){case e:case r:!0}}if(c)return i(t),""===a?"."+A(c,0):a,w(i)?("",null!=t&&t.replace(j,"$&/")+"/",P(i,n,o,"",(function(t){return t}))):null!=i&&(_(i)&&function(t,n){return{$$typeof:e,type:t.type,key:n,ref:t.ref,props:t.props,_owner:t._owner}}(i,o+(!i.key||c&&c.key===i.key?"":(""+i.key).replace(j,"$&/")+"/")+t),n.push(i)),1;if(0,""===a?".":a+":",w(t))for(var u=0;u<t.length;u++){var l=a+A(t[u],u);P(s,n,o,l,i)}else if(function(t){return null===t||"object"!=typeof t?null:"function"==typeof(d&&t[d]||t["@@iterator"])?t:null}(t),"function"==typeof l)for(l.call(t),0;!t.next().done;)P(s.value,n,o,a+A(s,u++),i);else if("object"===s)throw String(t),Error("Objects are not valid as a React child (found: "+("[object Object]"===n?"object with keys {"+Object.keys(t).join(", ")+"}":n)+"). If you meant to render a collection of children, use an array instead.");return c}function k(t,n,e){if(null==t)return t;var r=[],o=0;return P(t,r,"","",(function(t){return n.call(e,t,o++)})),r}function D(t){if(-1===t._status){var n=t._result;n().then((function(n){0!==t._status&&-1!==t._status||(t._status=1,t._result=n)}),(function(n){0!==t._status&&-1!==t._status||(t._status=2,t._result=n)})),-1===t._status&&(t._status=0,t._result=n)}if(1===t._status)return t._result.default;throw t._result}var U={current:null},I={transition:null},R={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:I,ReactCurrentOwner:O};n.Fragment=o,n.createElement=E,n.memo=function(t,n){return{$$typeof:f,type:t,compare:void 0===n?null:n}},n.useCallback=function(t,n){return U.current.useCallback(t,n)},n.useEffect=function(t,n){return U.current.useEffect(t,n)},n.useState=function(t){return U.current.useState(t)}},294:(t,n,e)=>{t.exports=e(408)}},n={};function e(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={exports:{}};return t[r](a,a.exports,e),a.exports}e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),e.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var r={};return(()=>{e.r(r),e.d(r,{CheckmarkIcon:()=>dt,ErrorIcon:()=>it,LoaderIcon:()=>ut,ToastBar:()=>jt,ToastIcon:()=>xt,Toaster:()=>It,default:()=>Rt,resolveValue:()=>a,toast:()=>w,useToaster:()=>T,useToasterStore:()=>g});var t,n,o,a=function(t,n){return function(t){return"function"==typeof t}(t)?t(n):t},i=(t=0,function(){return(++t).toString()}),s=(n=void 0,function(){if(void 0===n&&"undefined"!=typeof window){var t=matchMedia("(prefers-reduced-motion: reduce)");n=!t||t.matches}return n}),c=e(294),u=function(){return u=Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o]);return t},u.apply(this,arguments)},l=function(t,n,e){if(e||2===arguments.length)for(var r,o=0,a=n.length;o<a;o++)!r&&o in n||(r||(r=Array.prototype.slice.call(n,0,o)),r[o]=n[o]);return t.concat(r||Array.prototype.slice.call(n))};!function(t){t[t.ADD_TOAST=0]="ADD_TOAST",t[t.UPDATE_TOAST=1]="UPDATE_TOAST",t[t.UPSERT_TOAST=2]="UPSERT_TOAST",t[t.DISMISS_TOAST=3]="DISMISS_TOAST",t[t.REMOVE_TOAST=4]="REMOVE_TOAST",t[t.START_PAUSE=5]="START_PAUSE",t[t.END_PAUSE=6]="END_PAUSE"}(o||(o={}));var f=new Map,p=function(t){if(!f.has(t)){var n=setTimeout((function(){f.delete(t),b({type:o.REMOVE_TOAST,toastId:t})}),1e3);f.set(t,n)}},d=function(t,n){switch(n.type){case o.ADD_TOAST:return u(u({},t),{toasts:l([n.toast],t.toasts,!0).slice(0,20)});case o.UPDATE_TOAST:return n.toast.id&&(i=n.toast.id,(s=f.get(i))&&clearTimeout(s)),u(u({},t),{toasts:t.toasts.map((function(t){return t.id===n.toast.id?u(u({},t),n.toast):t}))});case o.UPSERT_TOAST:var e=n.toast;return t.toasts.find((function(t){return t.id===e.id}))?d(t,{type:o.UPDATE_TOAST,toast:e}):d(t,{type:o.ADD_TOAST,toast:e});case o.DISMISS_TOAST:var r=n.toastId;return r?p(r):t.toasts.forEach((function(t){p(t.id)})),u(u({},t),{toasts:t.toasts.map((function(t){return t.id===r||void 0===r?u(u({},t),{visible:!1}):t}))});case o.REMOVE_TOAST:return void 0===n.toastId?u(u({},t),{toasts:[]}):u(u({},t),{toasts:t.toasts.filter((function(t){return t.id!==n.toastId}))});case o.START_PAUSE:return u(u({},t),{pausedAt:n.time});case o.END_PAUSE:var a=n.time-(t.pausedAt||0);return u(u({},t),{pausedAt:void 0,toasts:t.toasts.map((function(t){return u(u({},t),{pauseDuration:t.pauseDuration+a})}))})}var i,s},y=[],m={toasts:[],pausedAt:void 0},b=function(t){m=d(m,t),y.forEach((function(t){t(m)}))},h={blank:4e3,error:4e3,success:2e3,loading:1/0,custom:4e3},g=function(t){void 0===t&&(t={});var n=c.useState(m),e=n[0],r=n[1];c.useEffect((function(){return y.push(r),function(){var t=y.indexOf(r);t>-1&&y.splice(t,1)}}),[e]);var o=e.toasts.map((function(n){var e,r;return u(u(u(u({},t),t[n.type]),n),{duration:n.duration||(null===(e=t[n.type])||void 0===e?void 0:e.duration)||(null==t?void 0:t.duration)||h[n.type],style:u(u(u({},t.style),null===(r=t[n.type])||void 0===r?void 0:r.style),n.style)})}));return u(u({},e),{toasts:o})},v=function(){return v=Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o]);return t},v.apply(this,arguments)},x=function(t){return function(n,e){var r=function(t,n,e){return void 0===n&&(n="blank"),v(v({createdAt:Date.now(),visible:!0,type:n,ariaProps:{role:"status","aria-live":"polite"},message:t,pauseDuration:0},e),{id:(null==e?void 0:e.id)||i()})}(n,t,e);return b({type:o.UPSERT_TOAST,toast:r}),r.id}},w=function(t,n){return x("blank")(t,n)};w.error=x("error"),w.success=x("success"),w.loading=x("loading"),w.custom=x("custom"),w.dismiss=function(t){b({type:o.DISMISS_TOAST,toastId:t})},w.remove=function(t){return b({type:o.REMOVE_TOAST,toastId:t})},w.promise=function(t,n,e){var r=w.loading(n.loading,v(v({},e),null==e?void 0:e.loading));return t.then((function(t){return w.success(a(n.success,t),v(v({id:r},e),null==e?void 0:e.success)),t})).catch((function(t){w.error(a(n.error,t),v(v({id:r},e),null==e?void 0:e.error))})),t};var S=function(t,n){b({type:o.UPDATE_TOAST,toast:{id:t,height:n}})},O=function(){b({type:o.START_PAUSE,time:Date.now()})},T=function(t){var n=g(t),e=n.toasts,r=n.pausedAt;(0,c.useEffect)((function(){if(!r){var t=Date.now(),n=e.map((function(n){if(n.duration!==1/0){var e=(n.duration||0)+n.pauseDuration-(t-n.createdAt);if(!(e<0))return setTimeout((function(){return w.dismiss(n.id)}),e);n.visible&&w.dismiss(n.id)}}));return function(){n.forEach((function(t){return t&&clearTimeout(t)}))}}}),[e,r]);var a=(0,c.useCallback)((function(){r&&b({type:o.END_PAUSE,time:Date.now()})}),[r]),i=(0,c.useCallback)((function(t,n){var r,o=n||{},a=o.reverseOrder,i=void 0!==a&&a,s=o.gutter,c=void 0===s?8:s,u=o.defaultPosition,l=e.filter((function(n){return(n.position||u)===(t.position||u)&&n.height})),f=l.findIndex((function(n){return n.id===t.id})),p=l.filter((function(t,n){return n<f&&t.visible})).length,d=(r=l.filter((function(t){return t.visible}))).slice.apply(r,i?[p+1]:[0,p]).reduce((function(t,n){return t+(n.height||0)+c}),0);return d}),[e]);return{toasts:e,handlers:{updateHeight:S,startPause:O,endPause:a,calculateOffset:i}}};let E={data:""},_=t=>"object"==typeof window?((t?t.querySelector("#_goober"):window._goober)||Object.assign((t||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:t||E,j=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,A=/\/\*[^]*?\*\/|  +/g,P=/\n+/g,k=(t,n)=>{let e="",r="",o="";for(let a in t){let i=t[a];"@"==a[0]?"i"==a[1]?e=a+" "+i+";":r+="f"==a[1]?k(i,a):a+"{"+k(i,"k"==a[1]?"":n)+"}":"object"==typeof i?r+=k(i,n?n.replace(/([^,])+/g,(t=>a.replace(/(^:.*)|([^,])+/g,(n=>/&/.test(n)?n.replace(/&/g,t):t?t+" "+n:n)))):a):null!=i&&(a=/^--/.test(a)?a:a.replace(/[A-Z]/g,"-$&").toLowerCase(),o+=k.p?k.p(a,i):a+":"+i+";")}return e+(n&&o?n+"{"+o+"}":o)+r},D={},U=t=>{if("object"==typeof t){let n="";for(let e in t)n+=e+U(t[e]);return n}return t},I=(t,n,e,r,o)=>{let a=U(t),i=D[a]||(D[a]=(t=>{let n=0,e=11;for(;n<t.length;)e=101*e+t.charCodeAt(n++)>>>0;return"go"+e})(a));if(!D[i]){let n=a!==t?t:(t=>{let n,e,r=[{}];for(;n=j.exec(t.replace(A,""));)n[4]?r.shift():n[3]?(e=n[3].replace(P," ").trim(),r.unshift(r[0][e]=r[0][e]||{})):r[0][n[1]]=n[2].replace(P," ").trim();return r[0]})(t);D[i]=k(o?{["@keyframes "+i]:n}:n,e?"":"."+i)}let s=e&&D.g?D.g:null;return e&&(D.g=D[i]),((t,n,e,r)=>{r?n.data=n.data.replace(r,t):-1===n.data.indexOf(t)&&(n.data=e?t+n.data:n.data+t)})(D[i],n,r,s),i},R=(t,n,e)=>t.reduce(((t,r,o)=>{let a=n[o];if(a&&a.call){let t=a(e),n=t&&t.props&&t.props.className||/^go/.test(t)&&t;a=n?"."+n:t&&"object"==typeof t?t.props?"":k(t,""):!1===t?"":t}return t+r+(null==a?"":a)}),"");function C(t){let n=this||{},e=t.call?t(n.p):t;return I(e.unshift?e.raw?R(e,[].slice.call(arguments,1),n.p):e.reduce(((t,e)=>Object.assign(t,e&&e.call?e(n.p):e)),{}):e,_(n.target),n.g,n.o,n.k)}C.bind({g:1});let M,z,N,$=C.bind({k:1});function F(t,n){let e=this||{};return function(){let r=arguments;function o(a,i){let s=Object.assign({},a),c=s.className||o.className;e.p=Object.assign({theme:z&&z()},s),e.o=/ *go\d+/.test(c),s.className=C.apply(e,r)+(c?" "+c:""),n&&(s.ref=i);let u=t;return t[0]&&(u=s.as||t,delete s.as),N&&u[0]&&N(s),M(u,s)}return n?n(o):o}}var q,V,H,L,B,Y,Z,G,J,K,Q,W,X,tt,nt,et=function(t,n){return Object.defineProperty?Object.defineProperty(t,"raw",{value:n}):t.raw=n,t},rt=$(q||(q=et(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n transform: scale(1) rotate(45deg);\n  opacity: 1;\n}"]))),ot=$(V||(V=et(["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0);\n  opacity: 0;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),at=$(H||(H=et(["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(90deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(90deg);\n\topacity: 1;\n}"]))),it=F("div")(L||(L=et(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ",";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"],["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n\n  &:after,\n  &:before {\n    content: '';\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 150ms;\n    position: absolute;\n    border-radius: 3px;\n    opacity: 0;\n    background: ",";\n    bottom: 9px;\n    left: 4px;\n    height: 2px;\n    width: 12px;\n  }\n\n  &:before {\n    animation: "," 0.15s ease-out forwards;\n    animation-delay: 180ms;\n    transform: rotate(90deg);\n  }\n"])),(function(t){return t.primary||"#ff4b4b"}),rt,ot,(function(t){return t.secondary||"#fff"}),at),st=function(t,n){return Object.defineProperty?Object.defineProperty(t,"raw",{value:n}):t.raw=n,t},ct=$(B||(B=st(["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"],["\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n"]))),ut=F("div")(Y||(Y=st(["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ",";\n  border-right-color: ",";\n  animation: "," 1s linear infinite;\n"],["\n  width: 12px;\n  height: 12px;\n  box-sizing: border-box;\n  border: 2px solid;\n  border-radius: 100%;\n  border-color: ",";\n  border-right-color: ",";\n  animation: "," 1s linear infinite;\n"])),(function(t){return t.secondary||"#e0e0e0"}),(function(t){return t.primary||"#616161"}),ct),lt=function(t,n){return Object.defineProperty?Object.defineProperty(t,"raw",{value:n}):t.raw=n,t},ft=$(Z||(Z=lt(["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"],["\nfrom {\n  transform: scale(0) rotate(45deg);\n\topacity: 0;\n}\nto {\n  transform: scale(1) rotate(45deg);\n\topacity: 1;\n}"]))),pt=$(G||(G=lt(["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"],["\n0% {\n\theight: 0;\n\twidth: 0;\n\topacity: 0;\n}\n40% {\n  height: 0;\n\twidth: 6px;\n\topacity: 1;\n}\n100% {\n  opacity: 1;\n  height: 10px;\n}"]))),dt=F("div")(J||(J=lt(["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: "," 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ",";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"],["\n  width: 20px;\n  opacity: 0;\n  height: 20px;\n  border-radius: 10px;\n  background: ",";\n  position: relative;\n  transform: rotate(45deg);\n\n  animation: "," 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n  animation-delay: 100ms;\n  &:after {\n    content: '';\n    box-sizing: border-box;\n    animation: "," 0.2s ease-out forwards;\n    opacity: 0;\n    animation-delay: 200ms;\n    position: absolute;\n    border-right: 2px solid;\n    border-bottom: 2px solid;\n    border-color: ",";\n    bottom: 6px;\n    left: 6px;\n    height: 10px;\n    width: 6px;\n  }\n"])),(function(t){return t.primary||"#61d345"}),ft,pt,(function(t){return t.secondary||"#fff"})),yt=function(t,n){return Object.defineProperty?Object.defineProperty(t,"raw",{value:n}):t.raw=n,t},mt=function(){return mt=Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o]);return t},mt.apply(this,arguments)},bt=F("div")(K||(K=yt(["\n  position: absolute;\n"],["\n  position: absolute;\n"]))),ht=F("div")(Q||(Q=yt(["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"],["\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 20px;\n  min-height: 20px;\n"]))),gt=$(W||(W=yt(["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"],["\nfrom {\n  transform: scale(0.6);\n  opacity: 0.4;\n}\nto {\n  transform: scale(1);\n  opacity: 1;\n}"]))),vt=F("div")(X||(X=yt(["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: "," 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"],["\n  position: relative;\n  transform: scale(0.6);\n  opacity: 0.4;\n  min-width: 20px;\n  animation: "," 0.3s 0.12s cubic-bezier(0.175, 0.885, 0.32, 1.275)\n    forwards;\n"])),gt),xt=function(t){var n=t.toast,e=n.icon,r=n.type,o=n.iconTheme;return void 0!==e?"string"==typeof e?c.createElement(vt,null,e):e:"blank"===r?null:c.createElement(ht,null,c.createElement(ut,mt({},o)),"loading"!==r&&c.createElement(bt,null,"error"===r?c.createElement(it,mt({},o)):c.createElement(dt,mt({},o))))},wt=function(t,n){return Object.defineProperty?Object.defineProperty(t,"raw",{value:n}):t.raw=n,t},St=function(){return St=Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o]);return t},St.apply(this,arguments)},Ot=function(t){return"\n0% {transform: translate3d(0,".concat(-200*t,"%,0) scale(.6); opacity:.5;}\n100% {transform: translate3d(0,0,0) scale(1); opacity:1;}\n")},Tt=function(t){return"\n0% {transform: translate3d(0,0,-1px) scale(1); opacity:1;}\n100% {transform: translate3d(0,".concat(-150*t,"%,-1px) scale(.6); opacity:0;}\n")},Et=F("div")(tt||(tt=wt(["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"],["\n  display: flex;\n  align-items: center;\n  background: #fff;\n  color: #363636;\n  line-height: 1.3;\n  will-change: transform;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1), 0 3px 3px rgba(0, 0, 0, 0.05);\n  max-width: 350px;\n  pointer-events: auto;\n  padding: 8px 10px;\n  border-radius: 8px;\n"]))),_t=F("div")(nt||(nt=wt(["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"],["\n  display: flex;\n  justify-content: center;\n  margin: 4px 10px;\n  color: inherit;\n  flex: 1 1 auto;\n  white-space: pre-line;\n"]))),jt=c.memo((function(t){var n=t.toast,e=t.position,r=t.style,o=t.children,i=n.height?function(t,n){var e=t.includes("top")?1:-1,r=s()?["0%{opacity:0;} 100%{opacity:1;}","0%{opacity:1;} 100%{opacity:0;}"]:[Ot(e),Tt(e)],o=r[1];return{animation:n?"".concat($(r[0])," 0.35s cubic-bezier(.21,1.02,.73,1) forwards"):"".concat($(o)," 0.4s forwards cubic-bezier(.06,.71,.55,1)")}}(n.position||e||"top-center",n.visible):{opacity:0},u=c.createElement(xt,{toast:n}),l=c.createElement(_t,St({},n.ariaProps),a(n.message,n));return c.createElement(Et,{className:n.className,style:St(St(St({},i),r),n.style)},"function"==typeof o?o({icon:u,message:l}):c.createElement(c.Fragment,null,u,l))})),At=function(t,n){return Object.defineProperty?Object.defineProperty(t,"raw",{value:n}):t.raw=n,t},Pt=function(){return Pt=Object.assign||function(t){for(var n,e=1,r=arguments.length;e<r;e++)for(var o in n=arguments[e])Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o]);return t},Pt.apply(this,arguments)};!function(t,n,e,r){k.p=n,M=t,z=e,N=r}(c.createElement);var kt,Dt=function(t){var n=t.id,e=t.className,r=t.style,o=t.onHeightUpdate,a=t.children,i=c.useCallback((function(t){if(t){var e=function(){var e=t.getBoundingClientRect().height;o(n,e)};e(),new MutationObserver(e).observe(t,{subtree:!0,childList:!0,characterData:!0})}}),[n,o]);return c.createElement("div",{ref:i,className:e,style:r},a)},Ut=C(kt||(kt=At(["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"],["\n  z-index: 9999;\n  > * {\n    pointer-events: auto;\n  }\n"]))),It=function(t){var n=t.reverseOrder,e=t.position,r=void 0===e?"top-center":e,o=t.toastOptions,i=t.gutter,u=t.children,l=t.containerStyle,f=t.containerClassName,p=T(o),d=p.toasts,y=p.handlers;return c.createElement("div",{style:Pt({position:"fixed",zIndex:9999,top:16,left:16,right:16,bottom:16,pointerEvents:"none"},l),className:f,onMouseEnter:y.startPause,onMouseLeave:y.endPause},d.map((function(t){var e=t.position||r,o=function(t,n){var e=t.includes("top"),r=e?{top:0}:{bottom:0},o=t.includes("center")?{justifyContent:"center"}:t.includes("right")?{justifyContent:"flex-end"}:{};return Pt(Pt({left:0,right:0,display:"flex",position:"absolute",transition:s()?void 0:"all 230ms cubic-bezier(.21,1.02,.73,1)",transform:"translateY(".concat(n*(e?1:-1),"px)")},r),o)}(e,y.calculateOffset(t,{reverseOrder:n,gutter:i,defaultPosition:r}));return c.createElement(Dt,{id:t.id,key:t.id,onHeightUpdate:y.updateHeight,className:t.visible?Ut:"",style:o},"custom"===t.type?a(t.message,t):u?u(t):c.createElement(jt,{toast:t,position:e}))})))};const Rt=w})(),r})()));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,